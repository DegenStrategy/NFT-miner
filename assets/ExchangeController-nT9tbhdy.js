import{cM as A,cN as E,cO as p,cP as u,cQ as P,cR as l,cS as f,cT as y,cU as C,cV as d,cW as S,cX as m,cY as g,cZ as k,c_ as U,c$ as x,d0 as b}from"./index-Bsk-3PfJ.js";const N=0,h={paymentAsset:null,amount:0,tokenAmount:0,priceLoading:!1,error:null,exchanges:[],isLoading:!1,currentPayment:void 0,isPaymentInProgress:!1,paymentId:"",assets:[]},e=A(h),c={state:e,subscribe(t){return b(e,()=>t(e))},subscribeKey(t,s){return x(e,t,s)},resetState(){Object.assign(e,{...h})},async getAssetsForNetwork(t){const s=U(t),r=await c.getAssetsImageAndPrice(s),n=s.map(a=>{const o=a.asset==="native"?g():`${a.network}:${a.asset}`,i=r.find(w=>w.fungibles?.[0]?.address?.toLowerCase()===o.toLowerCase());return{...a,price:i?.fungibles?.[0]?.price||1,metadata:{...a.metadata,iconUrl:i?.fungibles?.[0]?.iconUrl}}});return e.assets=n,n},async getAssetsImageAndPrice(t){const s=t.map(n=>n.asset==="native"?g():`${n.network}:${n.asset}`);return await Promise.all(s.map(n=>k.fetchTokenPrice({addresses:[n]})))},getTokenAmount(){if(!e?.paymentAsset?.price)throw new Error("Cannot get token price");const t=new Intl.NumberFormat("en-US",{minimumFractionDigits:0,maximumFractionDigits:8}).format(e.amount/e.paymentAsset.price);return Number(t)},setAmount(t){e.amount=t,e.paymentAsset?.price&&(e.tokenAmount=c.getTokenAmount())},setPaymentAsset(t){e.paymentAsset=t},isPayWithExchangeEnabled(){return m.state.remoteFeatures?.payWithExchange||m.state.remoteFeatures?.payments||m.state.features?.pay},isPayWithExchangeSupported(){return c.isPayWithExchangeEnabled()&&d.state.activeCaipNetwork&&S.PAY_WITH_EXCHANGE_SUPPORTED_CHAIN_NAMESPACES.includes(d.state.activeCaipNetwork.chainNamespace)},async fetchExchanges(){try{const t=c.isPayWithExchangeSupported();if(!e.paymentAsset||!t){e.exchanges=[],e.isLoading=!1;return}e.isLoading=!0;const s=await C({page:N,asset:y(e.paymentAsset.network,e.paymentAsset.asset),amount:e.amount.toString()});e.exchanges=s.exchanges.slice(0,2)}catch{throw l.showError("Unable to get exchanges"),new Error("Unable to get exchanges")}finally{e.isLoading=!1}},async getPayUrl(t,s){try{const r=Number(s.amount),n=await f({exchangeId:t,asset:y(s.network,s.asset),amount:r.toString(),recipient:`${s.network}:${s.recipient}`});return p.sendEvent({type:"track",event:"PAY_EXCHANGE_SELECTED",properties:{exchange:{id:t},configuration:{network:s.network,asset:s.asset,recipient:s.recipient,amount:r},currentPayment:{type:"exchange",exchangeId:t},source:"fund-from-exchange",headless:!1}}),n}catch(r){throw r instanceof Error&&r.message.includes("is not supported")?new Error("Asset not supported"):new Error(r.message)}},async handlePayWithExchange(t){try{if(!u.state.address)throw new Error("No account connected");if(!e.paymentAsset)throw new Error("No payment asset selected");const s=P.returnOpenHref("","popupWindow","scrollbar=yes,width=480,height=720");if(!s)throw new Error("Could not create popup window");e.isPaymentInProgress=!0,e.paymentId=crypto.randomUUID(),e.currentPayment={type:"exchange",exchangeId:t};const{network:r,asset:n}=e.paymentAsset,a={network:r,asset:n,amount:e.tokenAmount,recipient:u.state.address},o=await c.getPayUrl(t,a);if(!o){try{s.close()}catch(i){console.error("Unable to close popup window",i)}throw new Error("Unable to initiate payment")}e.currentPayment.sessionId=o.sessionId,e.currentPayment.status="IN_PROGRESS",e.currentPayment.exchangeId=t,s.location.href=o.url}catch{e.error="Unable to initiate payment",l.showError(e.error)}},async waitUntilComplete({exchangeId:t,sessionId:s,paymentId:r,retries:n=20}){const a=await c.getBuyStatus(t,s,r);if(a.status==="SUCCESS"||a.status==="FAILED")return a;if(n===0)throw new Error("Unable to get deposit status");return await new Promise(o=>{setTimeout(o,5e3)}),c.waitUntilComplete({exchangeId:t,sessionId:s,paymentId:r,retries:n-1})},async getBuyStatus(t,s,r){try{if(!e.currentPayment)throw new Error("No current payment");const n=await E({sessionId:s,exchangeId:t});return e.currentPayment.status=n.status,(n.status==="SUCCESS"||n.status==="FAILED")&&(e.currentPayment.result=n.txHash,e.isPaymentInProgress=!1,p.sendEvent({type:"track",event:n.status==="SUCCESS"?"PAY_SUCCESS":"PAY_ERROR",properties:{source:"fund-from-exchange",paymentId:r,configuration:{network:e.paymentAsset?.network||"",asset:e.paymentAsset?.asset||"",recipient:u.state.address||"",amount:e.amount},currentPayment:{type:"exchange",exchangeId:e.currentPayment?.exchangeId,sessionId:e.currentPayment?.sessionId,result:n.txHash}}})),n}catch{return{status:"UNKNOWN",txHash:""}}},reset(){e.currentPayment=void 0,e.isPaymentInProgress=!1,e.paymentId="",e.paymentAsset=null,e.amount=0,e.tokenAmount=0,e.priceLoading=!1,e.error=null,e.exchanges=[],e.isLoading=!1}};export{c as E};
